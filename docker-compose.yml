services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - "9870:9870"
      - "9000:9000"
    environment:
      - CLUSTER_NAME=hadoopsample
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - hdfs_namenode:/hadoop/dfs/name

  hdfs-init:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-init
    depends_on:
      - namenode
    environment:
      - CLUSTER_NAME=hadoopsample
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./conf/init-hdfs.sh:/init-hdfs.sh
    command: ["/bin/bash", "/init-hdfs.sh"]

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870"
    env_file:
      - ./conf/hadoop.env

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 resourcemanager:8088"
    env_file:
      - ./conf/hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./conf/hadoop.env

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    environment:
      - CLUSTER_NAME=hadoopsample
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - hdfs_datanode1:/hadoop/dfs/data
    depends_on:
      - namenode

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    environment:
      - CLUSTER_NAME=hadoopsample
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - hdfs_datanode2:/hadoop/dfs/data
    depends_on:
      - namenode

  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode3
    environment:
      - CLUSTER_NAME=hadoopsample
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - hdfs_datanode3:/hadoop/dfs/data
    depends_on:
      - namenode

  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "4040-4045:4040-4045"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    depends_on:
      - namenode
    volumes:
      - ./spark-apps:/opt/spark-apps

  spark-worker-node-1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-node-1
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    depends_on:
      - spark-master
    volumes:
      - ./spark-apps:/opt/spark-apps
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  spark-worker-node-2:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-node-2
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    depends_on:
      - spark-master
    volumes:
      - ./spark-apps:/opt/spark-apps
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  spark-worker-node-3:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-node-3
    ports:
      - "8083:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    depends_on:
      - spark-master
    volumes:
      - ./spark-apps:/opt/spark-apps
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  spark-worker-node-4:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-node-4
    ports:
      - "8084:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    depends_on:
      - spark-master
    volumes:
      - ./spark-apps:/opt/spark-apps
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    depends_on:
      - namenode
    env_file:
      - ./conf/hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./conf/hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    ports:
      - "5432:5432"

volumes:
  hdfs_namenode:
  hdfs_datanode1:
  hdfs_datanode2:
  hdfs_datanode3:
  hadoop_historyserver: